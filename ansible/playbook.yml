- name: goLang installation
  hosts: all
  become: yes
  become_method: sudo
  gather_facts: yes
  vars:
    home_dir: "/home/ec2-user"
    file_owner: "ec2-user"
    new_go_version: "1.14.2"

  tasks: 
  - debug: msg="play_hosts={{play_hosts}}"

  - debug: msg="home={{ home_dir }}"

  - name: Check golang version
    command: bash -c "/usr/local/go/bin/go version|sed -e 's/go version go//g'|cut -d' ' -f1"
    ignore_errors: yes
    register: go_version
    changed_when: false
  - debug: msg="go_version={{go_version.stdout}}"
  - debug: msg="new_go_version={{new_go_version}}"
  - name: check current go version
    set_fact:
      installed: true
      when: go_version.stdout != "" and "go_version.stdout | version_compare('{{new_go_version}}', operator="ge",strict=True)"
  - debug: msg="Continuing with installation"

  - name: download golang tar
    get_url:
      url: "https://dl.google.com/go/go1.14.2.linux-amd64.tar.gz"
      dest: "{{home_dir}}"
      mode: 0440

  - name: check if downloaded
    command: ls
    register: ls
  - debug: msg="{{ls.stdout}}"

  - name: Extract Go
    unarchive:
      src: "{{home_dir}}/go{{new_go_version}}.linux-amd64.tar.gz"
      dest: /usr/local
      copy: no
    become: yes
  
  - name : Create go directories in home
    file:
      path: "{{item}}"
      state: directory
      owner: "{{file_owner}}"
      group: "{{file_owner}}"
      mode: 0775
    with_items:
      - "{{home_dir}}/go"
      - "{{home_dir}}/go/bin"

  - name: modify .bashrc
    blockinfile: 
      dest: "{{home_dir}}/.bashrc"
      block: |
        export GOPATH=$HOME/go
        export GOBIN=$GOPATH/bin
        export PATH=$GOBIN:$PATH:/usr/local/go/bin
      marker: '# {mark} ANSIBLE MANAGED BLOCK - changes for golang'
      insertafter: EOF
      create: yes
  
- name: Install Dep
  # hosts: all
  # become: yes
  # become_method: sudo
  # gather_facts: yes
  # tasks: 
  # - name: Dep installation
  #   get_url: 


- name: Deploy Application
  hosts: all
  vars:
  tasks: 